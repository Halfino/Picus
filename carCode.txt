#include <Servo.h>

#define DIR_AHEAD 1
#define DIR_BACKWARD 2
#define DIR_LEFT 3
#define DIR_RIGHT 4
#define trigPin 7
#define echoPin 8

Servo myservo;

int M1_Left = 12; //Rotace motoru A
int M1_Right = 10; //Rotace motoru A
int M2_Left = 13; //Rotace motoru B
int M2_Right = 11; //Rotace motoru B
int pos; //Pozice serva - doladit
float distance;
int state_left;
int state_ahead;
int state_right;
float minimumdistance;
void setup() {
  //Nastaveni pių motorkų
  pinMode(M1_Left, OUTPUT);
  pinMode(M1_Right , OUTPUT);
  pinMode(M2_Left, OUTPUT);
  pinMode(M2_Right , OUTPUT);
  pos = 0;
  stop();
  //Nastavení serva
  myservo.attach(5);
  Serial.begin (9600);
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
}

void loop() {
  servo1();
}


void go(int direction){
  
  boolean inPin1 = LOW;
  boolean inPin2 = HIGH;
  boolean inPin3 = HIGH;
  boolean inPin4 = LOW;
  
  if (direction == DIR_AHEAD) {
    inPin1 = HIGH;
    inPin2 = LOW;
    inPin3 = LOW;
    inPin4 = HIGH;
  }

  if (direction == DIR_RIGHT) {
    inPin1 = HIGH;
    inPin2 = LOW;
    inPin3 = LOW;
    inPin4 = LOW;
  }
  if (direction == DIR_LEFT) {
    inPin1 = LOW;
    inPin2 = HIGH;
    inPin3 = LOW;
    inPin4 = LOW;
  }
  
  digitalWrite(M1_Left, inPin1);
  digitalWrite(M1_Right , inPin2);
  digitalWrite(M2_Left, inPin3);
  digitalWrite(M2_Right , inPin4);
  delay(250);
}

void stop() {
  digitalWrite(M1_Left, LOW);
  digitalWrite(M1_Right , LOW);
  digitalWrite(M2_Left, LOW);
  digitalWrite(M2_Right , LOW);
  delay(250);
}
void servo1(){
  for (pos = 0; pos <= 180; pos++){
    myservo.write(pos);
    float duration, distance;
    digitalWrite(trigPin, LOW);
    delayMicroseconds(2);
    digitalWrite(trigPin, HIGH);
    delayMicroseconds(10);
    digitalWrite(trigPin, LOW);
    duration = pulseIn(echoPin, HIGH);
    distance = (duration / 2) / 29.1;
    if(pos < 70){
      mindistance(distance);
      if (minimumdistance < 15){
        state_left = 1;
        
      }
      else if (minimumdistance >=15 && minimumdistance < 25){
        state_left = 2;
        
      }
      else{
        state_left = 10;
      }
    }
    else if(pos >=70 && pos < 140){
      mindistance(distance);
      if (minimumdistance < 15){
        state_ahead = 1;
      }
      else if (minimumdistance >=15 && minimumdistance < 25){
        state_ahead = 2;
      }
      else{
        state_ahead = 10;
      }
    }
    else if(pos >= 140){
            mindistance(distance);
      if (minimumdistance < 15){
        state_right = 3;
      }
      else if (minimumdistance >=15 && minimumdistance < 25){
        state_right = 4;
      }
      else{
        state_right = 10;
      }
    }
  }
  for(pos = 180;pos >= 0; pos--){
    myservo.write(pos);
    delay(5);
    } 

      if (state_left == 1 || state_ahead == 1){
      go(DIR_BACKWARD);
      stop();
      go(DIR_RIGHT);
      stop();
    }
    else if(state_left == 2 || state_ahead == 2){
      go(DIR_RIGHT);
      stop();
    }
    else if(state_right == 3){
      go(DIR_BACKWARD);
      stop();
      go(DIR_LEFT);
      stop();
    }
    else if(state_right == 4){
      go(DIR_LEFT);
      stop();
    }
    else{
      go(DIR_AHEAD);
      stop();
    }
}
  
float mindistance(float distance){
  minimumdistance = 100;
  if (minimumdistance > distance){
    minimumdistance = distance;
  }
}


